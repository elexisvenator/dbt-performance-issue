
# Name your package! Package names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_performance_test'
version: '1.0'

# This setting configures which "profile" dbt uses for this project. Profiles contain
# database connection information, and should be configured in the  ~/.dbt/profiles.yml file
profile: 'performance_test'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that source models can be found
# in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"] 
test-paths: ["tests"]
data-paths: ["seed_data"]
macro-paths: ["macros"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

# You can define configurations for models in the `source-paths` directory here.
# Using these configurations, you can enable or disable models, change how they
# are materialized, and more!

seeds:
    dbt_performance_test:
        enabled: true
        schema: load
models:
    dbt_performance_test:
        base: # these models allow dbt to point to the load table
            materialized: view
            schema: base
        dw:
            materialized: table
            schema: dw
            vars:
                # limit number of times recursive CTEs loop though when e.g. circular dependencies are found
                # or if we just want to restrict a bridge table's depth level
                max_recursions: 100
                # value of deleted data for pivoted columns so we can keep pivoted columns and
                # not break something thats expecting the column to be present
                deleted_data: -deleted-
                # string format to use when converting just a date value to represent as text in columns with
                # mixed data types
                date_to_text_format: YYYY-MM-DD
        reference:
            materialized: table
            schema: dw